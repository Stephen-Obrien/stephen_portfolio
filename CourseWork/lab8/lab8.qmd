---
title: "Lab 8: The 12 Days of Christmas"
format: 
  html:
    self-contained: true
editor: visual
code-fold: true
theme: mint
execute: 
  warning: false
---

```{r packages}
#| include: false
library(dplyr)
library(glue)
library(stringr)
library(purrr)
```

```{r data}
#| include: false
xmas <- readr::read_csv(
  "https://www.dropbox.com/s/e584pryn8evm1gz/xmas.csv?dl=1"
  )
```

## 1. Function from PA8

```{r pluralize}
pluralize_gift <- function(gift){
  if(str_detect(gift, "oo")) {
    gift <- str_replace(gift, "oo", "ee")
    return(gift)
    }
  else if(str_detect(gift, "y$")){
    gift <- str_replace(gift, "y$", "ies")
    return(gift)
    }
  else{
    gift <- str_glue('{gift}s')
  return(gift)
    }

}
```

## 1.2

```{r phrase-function}
make_phrase <- function(num_word, item, verb, adjective, location) {
  
  ## Step 1: Replace NAs with blank strings
  verb <- str_replace_na(verb, "")
  
  num_word <- str_replace_na(num_word, "")
  
  item <- str_replace_na(item, "")
  
  verb <- str_replace_na(verb, "")
  
  adjective <- str_replace_na(adjective, "")
  
  location <- str_replace_na(location, "")
  
  ## Step 2: If the day is larger than 1, the items need pluralized! 
    if(num_word != "one") {
   item <-  pluralize_gift(item)
    }
  
  ## Step 3: If the word starts with a vowel, add "an" to the beginning
  all <- c(num_word, item, verb, adjective, location)
  all <- str_replace_all(all, '^[aieou]', 'an\1')
  
  ## Step 4: Glue all of the pieces together! 
  phrase <- glue::glue("{num_word} {adjective} {item} {verb} {location}")
  
  return(phrase)
}
```

## 1.3

```{r}
make_phrase <- function(num_word, item, verb, adjective, location) {
  
  ## Step 1: Replace NAs with blank strings
  verb <- str_replace_na(verb, "")
  
  num_word <- str_replace_na(num_word, "")
  
  item <- str_replace_na(item, "")
  
  verb <- str_replace_na(verb, "")
  
  adjective <- str_replace_na(adjective, "")
  
  location <- str_replace_na(location, "")
  
  ## Step 2: If the day is larger than 1, the items need pluralized! 
    if(num_word != "one") {
   item <-  pluralize_gift(item)
    }
  else(num_word = "a")
  ## Step 3: If the word starts with a vowel, add "an" to the beginning
  all <- c(num_word, item, verb, adjective, location)
  all <- str_replace_all(all, '^[aieou]', 'an\1')
  
  ## Step 4: Glue all of the pieces together! 
  phrase <- glue::glue("{num_word} {adjective} {item} {verb} {location}")
  
  return(phrase)
}
```

### 

```{r x_mas2}
xmas2 <- xmas %>%
  mutate(
    day.num = as.character(english::english(Day)
                                ),
    Full.Phrase = pmap_chr(
      list(num_word = day.num,
           item = Gift.Item,
           verb = Verb,
           adjective = Adjective,
           location = Location),
      make_phrase
      )
  ) 

```

```{r sing_day_fun.}
sing_day <- function(dataset, line, phrase_col){
  # Step 1: Setup the intro line
  num_word <- english::ordinal(line)
  
  intro <- glue::glue("On the {num_word} day of Christmas")
  
  # Step 2: Sing the gift phrases

    phrases <- dataset |>
      pull( {{phrase_col}} )

  phrases <- phrases[line:1]
  phrases <- glue::glue_collapse(
    phrases, last = "and \n", sep ="\n"
    )
  
  ## put it together
  glue::glue("{intro}, my true love sent to me: \n {phrases}")
}
```

## Test of Sing Day Function

### Small Test

```{r sing_day_test}
#small test
sing_day(xmas2, 2, Full.Phrase)
```

### Larger Test

```{r}
#larger test
map_chr(1:12, ~ sing_day(xmas2, .x, Full.Phrase)) |>
  str_c(collapse = "\n") |>
  cat()
```

## Use Your Functions

```{r map_sing.day}
xmas2 <- xmas %>%
  mutate(
    day.num = as.character(english::english(Day)
                                ),
    Full.Phrase = pmap_chr(
      list(num_word = day.num,
           item = Gift.Item,
           verb = Verb,
           adjective = Adjective,
           location = Location),
      make_phrase
      )
  ) 

map_chr(1:12, ~sing_day(xmas2, .x, Full.Phrase)) |>
  str_c(collapse = "\n") |>
  cat()
```
