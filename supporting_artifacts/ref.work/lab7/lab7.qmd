---
title: "Lab 7: Functions and Fish"
format: 
  html:
    self-contained: true
editor: visual
code-fold: true
execute: 
  warning: false
  error: true
theme: mint
fig-align: center
---

```{r setup}
#| include: false
library(tidyverse)
fish <- read_csv(here::here("supporting_artifacts", "ref.work", "lab7", "BlackfootFish.csv" ))
```

```{r}
#| label: fig-msleep
#| warning: false
#| out-width: 60%

qplot(msleep$sleep_total)

```

reference: @fig-msleep

## tables

```{r}
#| label: tbl-msleep
#| tbl-cap: sleep time # adds caption to the figure. with out a cap it renders oddly.
#| echo: false #gets rid code in the render
library(gt)

msleep |> 
  group_by(vore) |> 
  summarize(Count = n (),
            avg_sleep = mean(sleep_total,
                             na.rm = TRUE)) |> 
  gt()
```

reference: @tbl-msleep

## callouts

using a fence

::: {#nte-mynote .callout-note}
check out this note!
:::

reference: @nte-mynote

## Missing data

### Missing data table

```{r missing_function}
#| include: false
missing <- function(x) {
  sum(is.na(x))
}
```

```{r missing_table}
#| arrange_nrow: 2
fish |> 
  mutate(
    across(
      .cols = everything(), .fns = ~(missing(.x))
    )
    ) |> 
  distinct(weight, .keep_all = TRUE) |> 
  pivot_longer(
    cols = everything(),
    names_to = "Observation Type",
    values_to = "Missing Data Points"
    ) |> 
  arrange(desc(`Missing Data Points`))
```

### missing data visualization

```{r missing_visual}
my_title <- theme(plot.title = element_text(hjust = 0.5, size = 18))

missing_fish <- fish |> 
  filter(is.na(weight == 0)) |> 
  group_by(section, trip, year) |> 
  summarize(weight = sum(is.na(weight)), .groups = "keep") |> 
  ungroup() |> 
  arrange(desc(year)) |> 
  rename("missing" = "weight")

missing_fish |> 
  mutate(trip = as.character(trip)) |> 
  ggplot() +
    geom_col(mapping = aes(x = year, 
                           y =  missing, 
                           fill = trip)) +
    facet_wrap(~section, nrow = 2) + 
    labs(title = "Missing Data Visualization", 
         y = NULL, 
         x = "Year",
         fill = "Trip",
         caption = "*Johnsrud and Scotty Brown
         refer to the section of river") + 
  my_title +
   scale_x_continuous(
    breaks = scales::pretty_breaks(n = 10)
                     )
```

I found information on how to change the scale of my x-axis on stack overflow.

https://stackoverflow.com/questions/11335836/increase-number-of-axis-ticks

## **Part Two: Adjusting the Data (Function Writing)**

## 

### a) Writing a function

```{r rescale_fun}
rescale01 <- function(x){
  r <- range(x, na.rm = TRUE)
  (x - r[1]) / (r[2] - r[1])
}

## add check
rescale01 <- function(x){
  stopifnot(is.numeric(x) | (length(x) > 1) == TRUE)
  r <- range(x, na.rm = TRUE)
  (x - r[1]) / (r[2] - r[1])
}
```

### b) Simple check

```{r simple_check}
x <- c(1:25, NA)
rescale01(x)
```

### c) More difficult check

```{r}
#| layout-nrow: 1
fish |> mutate(rescaled = rescale01(length)) |> 
  ggplot() +
  geom_boxplot(
    mapping = aes(x = rescaled), fill = "darkgreen", 
    outlier.color = "darkgreen", outlier.alpha = 0.1
    ) +
  labs(title = "Rescaled Length", x = NULL) +
  theme(axis.text.y = element_text(size = 0)) +
  my_title

fish |>  
  ggplot() +
  geom_boxplot(
    mapping = aes(x = length), fill = "darkred", 
    outlier.color = "darkred",outlier.alpha = 0.1
    ) +
  labs(title = "Orginal Length (cm)") +
  theme(axis.text.y = element_text(size = 0))+
  my_title
```

### incorporating variables

```{r}
rescale_column <- function(df, var) {
  df <- df |> mutate(
                across(
                  .cols = {{ var }},
                  .fns = rescale01
                )
    )
  
  return(df)
}
```

### Another test

```{r}
rescale_column(fish, c(length, weight))
```

.
